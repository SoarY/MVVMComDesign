apply plugin: 'com.android.application'

android {
    compileSdkVersion build_android.compileSdkVersion
    defaultConfig {
        applicationId build_android.applicationId
        minSdkVersion build_android.minSdkVersion
        targetSdkVersion build_android.targetSdkVersion
        versionCode build_android.versionCode
        versionName build_android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //阿里路由框架配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            if (isBuildModule.toBoolean()) {
                //独立运行
                manifest.srcFile 'src/main/alone/AndroidManifest.xml'
            } else {
                //合并到宿主
                manifest.srcFile 'src/main/AndroidManifest.xml'
                resources {
                    //正式版本时，排除debug文件夹下所有调试文件
                    exclude 'src/main/alone/*'
                }
            }
        }
    }

    dataBinding {
        enabled true
    }

    //统一资源前缀，规范资源引用
    resourcePrefix "app_"
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //宿主项目中判断组件是否需要独立运行
    if (isBuildModule.toBoolean()) {
        //组件独立运行时，宿主项目直接依赖基础库，避免编译错误
        implementation project(':library-commonres')
        implementation project(':library-common')
    } else {
        //身份验证模块
        implementation project(':module-sign')
    }
}
